"use client";
import { useEffect, useState } from "react";
import AuthProvider from "./AuthProvider";
import "./globals.css";
import { Raleway } from "next/font/google";
import { LocationContext } from "@/context/LocationContext";
import { ResultsContext } from "@/context/ResultsContext";
import { LoadScript } from "@react-google-maps/api";

const raleway = Raleway({ subsets: ["latin"] });
const libraries = ["places"];

export default function RootLayout({ children }) {
  const [location, setLocation] = useState({ lat: 0, lng: 0 });
  const [selectedResult, setSelectedResult] = useState([]);

  useEffect(() => {
    getUserLocation();
  }, []);

  const getUserLocation = () => {
    if (navigator.geolocation) {
      const watchId = navigator.geolocation.watchPosition(
        (pos) => {
          if (pos && pos.coords) {
            setLocation({
              lat: pos.coords.latitude,
              lng: pos.coords.longitude,
            });
            if (pos.coords.accuracy <= 100) {
              navigator.geolocation.clearWatch(watchId);
            }
          } else {
            console.error("Error getting coordinates:", pos);
          }
        },
        (error) => {
          console.error("Geolocation error:", error);
        },
        { enableHighAccuracy: true, timeout: 10000, maximumAge: 0 },
      );
      setTimeout(() => {
        navigator.geolocation.clearWatch(watchId);
      }, 30000);
    } else {
      console.error("Geolocation is not supported by this browser.");
    }
  };

  return (
    <html lang="en">
      <head>
        <meta charSet="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>LocalPoint</title>
        <meta name="description" content="Generated by LV" />
      </head>
      <body className={raleway.className}>
        <AuthProvider>
          <ResultsContext.Provider
            value={{ selectedResult, setSelectedResult }}
          >
            <LocationContext.Provider value={{ location, setLocation }}>
              <LoadScript
                libraries={libraries}
                googleMapsApiKey={"AIzaSyDk3Vr4aCA7wjbbX2r7Ikd8eUuhLGcERoE"} //test key
              >
                {children}
              </LoadScript>
            </LocationContext.Provider>
          </ResultsContext.Provider>
        </AuthProvider>
      </body>
    </html>
  );
}
